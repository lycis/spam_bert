name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
  workflow_dispatch:
    inputs:
      run_e2e:
        description: "Also run end-to-end tests (slow, downloads model)"
        required: false
        default: "false"

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  unit-tests:
    name: Unit tests (${{ matrix.os }} / py${{ matrix.python-version }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, windows-latest ]
        python-version: [ "3.10", "3.11" ]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"

      - name: Install dependencies (package + dev)
        run: |
          python -m pip install --upgrade pip
          pip install -e .
          pip install -r requirements-dev.txt

      - name: Run unit tests (no slow/e2e) with coverage
        run: |
          pytest -m "not slow and not e2e" --cov=spam_bert --cov-report=xml --cov-report=term-missing

      - name: Upload coverage to Codecov
        # Public repos: always upload. Private: upload only if token is set.
        if: ${{ !github.event.repository.private || secrets.CODECOV_TOKEN != '' }}
        uses: codecov/codecov-action@v4
        with:
          files: ./coverage.xml
          token: ${{ secrets.CODECOV_TOKEN }}          # not required for public repos
          flags: ${{ runner.os }}-py${{ matrix.python-version }}
          fail_ci_if_error: false

  e2e-tests:
    if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.run_e2e == 'true' }}
    name: E2E (ubuntu / py3.11)
    runs-on: ubuntu-latest
    timeout-minutes: 25
    env:
      TRANSFORMERS_CACHE: ${{ github.workspace }}/.hf_cache

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Cache HF models
        uses: actions/cache@v4
        with:
          path: ${{ env.TRANSFORMERS_CACHE }}
          key: hf-${{ runner.os }}-${{ hashFiles('requirements.txt') }}

      - name: Install dependencies (package + dev)
        run: |
          python -m pip install --upgrade pip
          pip install -e .
          pip install -r requirements-dev.txt

      - name: Run E2E tests (downloads tiny model once)
        run: |
          pytest -m "e2e" -q
